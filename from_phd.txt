
## Ο ηλιοστάτης (tracker) του Εργαστηρίου Φυσικής της Ατμόσφαιρας. {#trackerextra}

Η μετάδοση της κίνησης στον άξονα γίνεται μέσω ενός γραναζιού 12 δοντιών στον
κάθε κινητήρα, και ενός γραναζιού 70 δοντιών στον κάθε άξονα.  Αυτό δίνει τη
δυνατότητα οι άξονες του ηλιοστάτη να κινούνται με διακριτό βήμα $0.6^\circ \cdot 12
/ 70 \simeq 0.10286^\circ$ για το παλιό μοντέλο. Τα καινούρια μοντέλα του ηλιοστάτη,
αντίστοιχα έχουν βήμα ${0.125}^\circ$.

Για την εκτέλεση μιας πλήρους περιστροφής του κάθε άξονα ο κινητήρας πρέπει να κάνει
$360^\circ / (0.6^\circ \cdot 12 / 70) = 3500$ βήματα στο παλιό μοντέλο και
$360^\circ / {0.125}^\circ = 2880$ βήματα στα καινούρια μοντέλα.  Ενώ η μέγιστη
ταχύτατα περιστροφής των κινητήρων είναι περίπου μία περιστροφή ανά $15$
δευτερόλεπτα.


### Η λειτουργία του ηλιοστάτη {#tracker_communication}

Οι κινητήρες του ηλιοστάτη μπορούν να κινηθούν με σταθερό βήμα $0.6^\circ$ ο καθένας.
Το σύστημα μετάδοσης της κίνησης μειώνει το βήμα κίνησης του κάθε άξονα σε
${0.125}^\circ$.  Ο κινητήρας πρέπει να εκτελέσει $360^\circ / {0.125}^\circ = 2880$
βήματα, ώστε να γίνει μία πλήρης περιστροφή του άξονα.

Οι κινητήρες του ηλιοστάτη ελέγχονται από μικροελεγκτή (microcontroller), ο οποίος
βρίσκεται μέσα στο κύριο σώμα της συσκευής. Ο μικροελεγκτής είναι ήδη
προγραμματισμένος να εκτελεί άμεσα τις εντολές που λαμβάνει από τον υπολογιστή, μέσω
της σειριακής επικοινωνίας.

(ref:captiontrackerinside) Το εσωτερικό του ηλιοστάτη. Φαίνονται τα κύρια γρανάζια των αξόνων, ο κινητήρας του αζιμούθιου άξονα, ο ιμάντας κίνησης, το ηλεκτρονικό σύστημα ελέγχου, καθώς και προσαρτημένο πυρηλιόμετρο CHP-1 στην πίσω πλευρά.

```{r trackerinside, echo=F, fig.cap="(ref:captiontrackerinside)", out.width = '50%', fig.env='img'}
knitr::include_graphics("/home/athan/Aerosols/Photos/EL/20160615_Tracker2/20160615_125806.jpg")
```

Το λειτουργικό σύστημα του υπολογιστή αναγνωρίζει τη σειριακή σύνδεση με τον
microcontroller ως κάποια θύρα `COM#` (όπου "#" αριθμός) στα Windows ή ως συσκευή
`/dev/ttyUSB#`, `/dev/ttyS#` σε GNU/Linux. Οι εντολές στέλνονται στη συσκευή και το
αποτέλεσμά τους διαβάζεται από την αντίστοιχη σύνδεση. Τυπικά, η επικοινωνία είναι
ανάλογη με την εγγραφή (write) ή την ανάγνωση (read) κειμένου (string) από αρχείο, με
βήμα μία γραμμή ανά εντολή.  Κάθε γραμμή τερματίζεται με τον χαρακτήρα `'\r'`
(Carriage return, CR).

Η σειριακή επικοινωνία μπορεί να επιτευχθεί είτε με άμεση σύνδεση του μικροελεγκτή σε
σειριακή θύρα του υπολογιστή, είτε μέσω μετατροπέα USB-UART (usb to serial adapter)
σε θύρα USB του ηλεκτρονικού υπολογιστή (Σχήμα\nobreakspace{}\@ref(fig:trackercon)).
Στην παρούσα εφαρμογή, χρησιμοποιούμε τον μετατροπέα FT232 USB-Serial (UART) IC.
Υπάρχει το ενδεχόμενο κάποιοι μετατροπείς UART να μην επιτυγχάνουν σωστή επικοινωνία,
λόγω των τεχνικών τους χαρακτηριστικών. Στην περίπτωσή αυτή, πρέπει να ελεγχθεί η
συμβατότητα επικοινωνίας με τον μικροελεγκτή που χρησιμοποιείται στον μετατροπέα
UART.

```{r echo=F, include=F, eval=F}
## create source file of dot image and build it
system('echo \'
digraph trackercon {

  # Initialization of graph attributes
  graph [align   = center,
         layout  = dot,
         rankdir = LR,
         margin  = 0,
         dpi     = 400]

  # Initialization of node attributes
  node [shape = box,
        fontsize = 10,
        margin = 0.001]

    " Computer " -> " USB to RS-232 " -> " Power supply " -> " microcontroller " [dir="both"]

    subgraph cluster { label="Tracker assembly"
        margin = 14;
        " microcontroller " -> "step motors"
    }
}
\' > figure/trackercon.dot')
system('dot -Tpdf figure/trackercon.dot -o figure/trackercon.pdf')
system('dot -Tpng figure/trackercon.dot -o figure/trackercon.png')
```

\begin{figure}[h!]
  \centering
     \includegraphics[width=.90\linewidth]{./figure/trackercon}
  \caption
  [Επικοινωνία ελέγχου ηλιοστάτη]
  {
    Διάγραμμα επικοινωνίας του ηλιοστάτη με τον υπολογιστή ελέγχου.
  }\label{fig:trackercon}
\end{figure}


#### Συνδεσμολογία {#tracker_connection}

Έχει διαπιστωθεί εμπειρικά, ότι η σειρά της συνδεσμολογίας του ηλιοστάτη παίζει ρόλο
στην ορθή ενεργοποίηση των επιμέρους στοιχείων και την επιτυχή λειτουργία του
ηλιοστάτη. Για την επιτυχή επικοινωνία, προτείνουμε την αλληλουχία σύνδεσης (1-2-3-4)
ή (1-4-3-2) όπως φαίνεται στο Σχήμα\nobreakspace{}\@ref(fig:trackercomm).

```{r echo=F, include=F, eval=F}
## create source file of dot image and build it
system('echo \'
digraph trackercomm {

  # Initialization of graph attributes
  graph [align   = center,
         layout  = dot,
         rankdir = LR,
         margin  = 0,
         dpi     = 400]

  # Initialization of node attributes
  node [shape = box,
        fontsize = 10,
        margin = 0.001]

    " Computer "      -> " USB to RS-232 " [dir="both",label="1"];
    " Power source "  -> " Power supply "  [dir="both",label="4"];
    " USB to RS-232 " -> " Power supply "  [dir="both",label="2"];
    " Power supply "  -> " Tracker "       [dir="both",label="3"];
}
\' > figure/trackercomm.dot')
system('dot -Tpdf figure/trackercomm.dot -o figure/trackercomm.pdf')
system('dot -Tpng figure/trackercomm.dot -o figure/trackercomm.png')
```

\begin{figure}[h!]
  \centering
     \includegraphics[width=.80\linewidth]{./figure/trackercomm}
  \caption
  [Συνδεσμολογία ηλιοστάτη]
  {
  Διάγραμμα συνδέσεων του ηλιοστάτη. H κατάλληλη αλληλουχία σύνδεσης των στοιχείων
  είναι: (1-2-3-4) ή (1-4-3-2).
  }\label{fig:trackercomm}
\end{figure}


### Έλεγχος και προγραμματισμός του ηλιοστάτη {#tracker_control}

\todo{there are overlap of description}

#### Παράμετροι σειριακής επικοινωνίας

Οι απαραίτητες παράμετροι για την επικοινωνία με τη σειριακή θύρα του ηλιοστάτη
περιγράφονται στον Πίνακα\nobreakspace{}\@ref(tab:trackerserial).  Είναι χρήσιμο να
υπάρχει κάποιο ανώτατο όριο στον χρόνο αναμονής του υπολογιστή, κατά την επικοινωνία,
πριν αποφασιστεί ότι δεν είναι εφικτή.  Διαφορετικά, αν κάποιο μήνυμα περιμένει να
διαβαστεί από τη θύρα επικοινωνίας και αυτό δε γίνει, μπορεί να παγώσει τελείως η
επικοινωνία.

---------------------  -----------------
      Bits per second  4800 (baudrate)
            Data bits  8 (bytesize)
               Parity  none
            Stop bits  1
         Flow control  none
   Timeout (optional)  90 sec
---------------------  -----------------

Table: (\#tab:trackerserial) Παράμετροι επικοινωνίας του ηλιοστάτη μέσω της σειριακής θύρας RS-232.


#### Εντολές ηλιοστάτη

##### Μορφή εντολών

Η επικοινωνία με τον μικροελεγκτή του ηλιοστάτη γίνεται με εντολές που στέλνονται -
γράφονται μέσω της σειριακής θύρας. Οι εντολές και αποκρίσεις του ηλιοστάτη έχουν τη
μορφή κειμένου "string", το οποίο τερματίζεται με το σύμβολο `cr` ή `\r` (carriage
return).

Οι εντολές που έχουν ως όρισμα αριθμό, πρέπει να δίνονται με μορφή τεσσάρων ψηφίων
πάντα και όταν είναι αναγκαίο να προπορεύονται από τα αντίστοιχα μηδενικά (zero
padded).  Για παράδειγμα, οι αριθμοί $1000$, $999$, $99$ και $1$ θα έχουν τη μορφή
$1000$, $0999$, $0099$ και $0001$ αντίστοιχα. Αυτό ισχύει για εντολές απόλυτης και
σχετικής μετατόπισης (π.χ. `AZ=0100`, `AZ+0100`).  Παρομοίως, οι εντολές με όρισμα
δύο ψηφίων όπως οι εντολές που αφορούν ταχύτητες, έχουν την ίδια λογική και πάντα
χρησιμοποιούν δύο ψηφία.  Η απάντηση κάθε εντολής (ανάλογα και με τις ρυθμίσεις της
σειριακής θύρας και την εντολή) πρέπει να διαβαστεί από τη σειριακή σύνδεση κατά τη
διάρκεια της επικοινωνίας. Διαφορετικά δε θα αδειάσει η προσωρινή μνήμη (buffer) της
σειριακής θύρας και αυτό μπορεί να εμποδίσει τη συνέχεια της επικοινωνίας.


##### Μηδενισμός του βήματος του ηλιοστάτη

Οι εντολές μηδενισμού (`DA`, `DZ`) (Πίνακας\nobreakspace{}\@ref(tab:trackercomstr))
επιστρέφουν τους άξονες στην αρχική τους ("μηδενική") θέση.  Ο μικροελεγκτής, τους
περιστρέφει μέχρι τη φωτοδίοδο και εκεί ρυθμίζει το εσωτερικό βήμα κάθε άξονα στην
τιμή $5000$.  Ο ηλιοστάτης ανταποκρίνεται με τη διαφορά της τωρινής θέσης από τον
προηγούμενο μηδενισμό, μετά την εκτέλεση της εντολής.  Αυτές οι εντολές, συνήθως
χρησιμοποιούνται κατά την εκκίνηση της λειτουργίας, ώστε να βεβαιωθούμε για την
απόλυτη θέση του ηλιοστάτη, αφού δεν υπάρχει άλλος μηχανισμός αναγνώρισης της θέσης.
Οι παρακάτω εντολές πρέπει να δοθούν ξεχωριστά και να αναμένουμε τον μηδενισμό του
κάθε άξονα, με την αντίστοιχη απάντηση από τον ηλιοστάτη, προτού δοθεί η επόμενη
εντολή. Με αυτό τον τρόπο, επιτυγχάνεται η σωστή λειτουργία του μηχανισμού. Έπειτα,
πριν από τον μηδενισμό του κάθε άξονα πρέπει να δοθεί εντολή κίνησης του ίδιου άξονα,
προτού δοθεί εντολή μηδενισμού του επόμενου άξονα. Διαφορετικά δημιουργείται πρόβλημα
στην επικοινωνία και ο ηλιοστάτης δεν επιστρέφει την απάντηση `OK`, όταν μεταβεί στη
ζητούμενη θέση.  Υποθέτοντας ότι η θέση του αζιμούθιου και του ζενίθ της φωτοδιόδου
είναι $5000$, προτείνεται μετά από τον μηδενισμό του κάθε άξονα, να δίνεται εντολή
κίνηση του άξονα στη θέση $5000$. Έτσι, δε θα γίνει κάποια κίνηση, αφού ήδη βρίσκεται
σε αυτήν τη θέση, ωστόσο αποφεύγονται προβλήματα επικοινωνίας.


--------------------------------------------------------------------------
  Εντολή        Λειτουργία                  Απόκριση ηλιοστάτη
-----------  --------------------------  ---------------------------------
  DA\<cr\>   Μηδενισμός αζιμούθιου       eA:#### (όταν βρει τη φωτοδίοδο)

  DF\<cr\>   Μηδενισμός τροχού φίλτρων   eF:#### (όταν βρει τη φωτοδίοδο)
             εάν υπάρχει

  DZ\<cr\>   Μηδενισμός ζενίθ            eZ:#### (όταν βρει τη φωτοδίοδο)
-----------  --------------------------  ---------------------------------

Table: (\#tab:trackercomstr) Εντολές μηδενισμού των αξόνων και η απόκριση του
ηλιοστάτη.


##### Κίνηση των αξόνων

Η εντολές για την κίνηση των αξόνων έχουν τη γενική μορφή: `xx@####<cr>` και
αποτελούνται από τρία τμήματα (εδώ τα συμβολίζουμε με 'x', '@' και '#'). Η εξήγηση
των επιμέρους στοιχείων γίνεται στον Πίνακα\nobreakspace{}\@ref(tab:trackercompart)
και \@ref(tab:trackercomoper). Παραδείγματα έγκυρων εντολών βρίσκονται στον
Πίνακα\nobreakspace{}\@ref(tab:trackercomexamp). Το σύνολο των εντολών του ηλιοστάτη
παρατίθεται στον Πίνακα\nobreakspace{}\@ref(tab:trackercommands).

------------------------------------------------------------------------
  Παράμετρος  Λειτουργία
------------  ----------------------------------------------------------
          xx  Η παράμετρος στην οποία αναφέρεται

           @  Τελεστής της λειτουργίας που εκτελείται ( ?, =, +, - )

        ####  Αριθμητική τιμή της εντολής (##: για τις ταχύτητες)

      \<cr\>  Ο χαρακτήρας τερματισμού της εντολής
------------  ----------------------------------------------------------

Table: (\#tab:trackercompart) Τα μέρη της εντολής του ηλιοστάτη.

----------------------------------------------------------------------------------------------------------
 Τελεστής (@)   Λειτουργία                                                         Απάντηση
--------------  -----------------------------------------------------------------  -----------------------
             ?  Ζητά την τιμή της μεταβλητής από τον ηλιοστάτη, χωρίς ####         xx:####\<cr\> ή xx:##\<cr\>

             =  Θέτει την τιμή της μεταβλητής,                                     OK\<cr\>
                ## για παραμέτρους ταχύτητας και #### για
                θέσης των αξόνων

             +  Αυξάνει τη μεταβλητή κατά τη δοσμένη ποσότητα,                     OK\<cr\>
                ## για παραμέτρους ταχύτητας και #### για
                θέσης των αξόνων

             -  Μειώνει τη μεταβλητή κατά τη δοσμένη ποσότητα                      OK\<cr\>
                ## για παραμέτρους ταχύτητας και #### για
                θέσης των αξόνων
--------------  -----------------------------------------------------------------  -----------------------

Table: (\#tab:trackercomoper) Παράμετροι ελέγχου (operators/modifiers) των εντολών
του ηλιοστάτη.

---------------------------------------------------------------------------------------------
                 Εντολές  Μέγεθος
------------------------  -------------------------------------------------------------------
       AZ@\#\#\#\#\<cr\>  Βήμα αζιμούθιου άξονα

      ZE@\#\#\#\#\<cr\>   Βήμα ζενίθιου άξονα

      FR@\#\#\#\#\<cr\>   Βήμα τροχού φίλτρων

          SA@\#\#\<cr\>   Ταχύτητα αζιμούθιου άξονα

          SZ@\#\#\<cr\>   Ταχύτητα ζενίθιου άξονα

          SF@\#\#\<cr\>   Ταχύτητα τροχού φίλτρων

      OA@\#\#\#\#\<cr\>   Τροποποίηση αρχικής αζιμούθιας θέσης

      OZ@\#\#\#\#\<cr\>   Τροποποίηση αρχικής ζενίθειας θέσης

      OF@\#\#\#\#\<cr\>   Τροποποίηση αρχικής θέσης φίλτρου

      IA@\#\#\#\#\<cr\>   Τροποποίηση της θέσης της φωτοδιόδου του αζιμούθου άξονα

      IZ@\#\#\#\#\<cr\>   Τροποποίηση της θέσης της φωτοδιόδου του ζενίθιου άξονα

      IF@\#\#\#\#\<cr\>   Τροποποίηση της θέσης της φωτοδιόδου του τροχού φίλτρων

      TA@\#\#\#\#\<cr\>   Τροποποίηση της ζητούμενης αζιμούθιας θέσης (μόνο ερώτηση)

      TZ@\#\#\#\#\<cr\>   Τροποποίηση της ζητούμενης ζενίθειας θέσης (μόνο ερώτηση)

      TF@\#\#\#\#\<cr\>   Τροποποίηση της ζητούμενης θέσης του τροχού φίλτρων (μόνο ερώτηση)

     GO XXXX,YYYY\<cr\>   Μετακινεί ταυτόχρονα την αζιμούθια και ζενίθεια θέση σε XXXX και YYYY βήματα αντίστοιχα

             STOP\<cr\>   Σταματά την κίνηση του ηλιοστάτη

    DEBUG ON/OFF\<cr\>    Ενεργοποιεί και απενεργοποιεί την κατάσταση αποσφαλμάτωσης (debuging). Στην περίπτωση του ON, ο ηλιοστάτης αποκρίνεται με την εντολή που του δόθηκε και την αντίστοιχη απάντηση
------------------------  -------------------------------------------------------------------

Table: (\#tab:trackercommands) Εντολές ηλιοστάτη.

Η εντολή `stop<cr>` σταματά την κίνηση των αξόνων. Λειτουργεί ακόμα και όταν ο
ηλιοστάτης έχει σφάλμα θέσης.  Αυτό μπορεί να συμβεί, στην περίπτωση που το βήμα ενός
άξονα έχει φτάσει σε μη επιτρεπτή τιμή και ο τελευταίος περιστρέφεται ασταμάτητα. Με
την παραπάνω εντολή ο ηλιοστάτης σταματά την κίνηση και αποκρίνεται με την τιμή
$9999$ στο ερώτημα της θέσης.


--------------------------------------------------------------------------------
   Εντολή          Αποτέλεσμα
-----------------  -------------------------------------------------------------
  DA\<cr\>         Μηδενισμός της θέσης του αζιμούθιου άξονα

  DZ\<cr\>         Μηδενισμός της θέσης του ζενίθιου άξονα

  AZ=6000\<cr\>    Μετακίνηση αζιμούθιου άξονα στη θέση $6000$

  ZE+0010\<cr\>    Μετακίνηση άξονα ζενίθ $10$ βήματα στη θετική φορά

  AZ-0100\<cr\>    Μετακίνηση άξονα αζιμούθιου $100$ βήματα στην αρνητική φορά

  AZ?\<cr\>        Ερώτημα θέσης, με απόκριση: AZ:5900\<cr\>

  SA=60\<cr\>      Ταχύτητα του αζιμούθιου άξονα 60

  ?\<cr\>          θέσεις των δύο αξόνων και του φίλτρου. \
                       Απαντήσεις: AZ:5010\<cr\>, ZE:5900\<cr\>, FR:####\<cr\>
--------------------------------------------------------------------------------

Table: (\#tab:trackercomexamp) Παράδειγμα έγκυρης αλληλουχίας εντολών ηλιοστάτη.



#### Προγραμματισμός εκτέλεσης μετρήσεων

Ο έλεγχος και ο αυτοματισμός της λειτουργίας του ηλιοστάτη, έχει γίνει στη γλώσσα
προγραμματισμού Python.  Οι βασικότερες προγραμματιστικές βιβλιοθήκες που
χρησιμοποιήθηκαν από επιστημονικής άποψης, είναι αυτές για τον υπολογισμό της θέσης
του ήλιου. Κάποιες από αυτές είναι οι astropy, pyephem και pysolar για python,
ορισμένες που χρησιμοποιούνται σε πακέτα προσομοιώσεων όπως TUV και Libradtran, αλλά
και άλλες όπως το SPA του NREL.

Μετά από κάποιες δοκιμές, καταλήξαμε στη χρήση του αλγορίθμου της βιβλιοθήκης
astropy.  Η αποτελεσματικότητα αυτού του αλγορίθμου έχει διαπιστωθεί με τη
μακροχρόνια τακτική επιθεώρηση της διόπτευσης του ηλιοστάτη.  Ένα από τα
πλεονεκτήματα του astropy είναι ότι αποτελούν τα πιο σύγχρονα και ενημερωμένα, με
υψηλή ακρίβεια και χρήση στην αστρονομία. Το γεγονός αυτό, διασφαλίζει την αξιόπιστη
λειτουργία του συστήματος.

Στην πορεία κατασκευής του προγράμματος ελέγχου του ηλιοστάτη, έχουμε προετοιμάσει
κατάλληλα το περιβάλλον, ώστε να μπορούν να εφαρμοστούν διαφορετικοί αλγόριθμοι της
θέση του ήλιου. Αυτό διευκολύνει την ταύτιση με άλλα όργανα του εργαστηρίου σε
περίπτωση που υπάρξει αυτή η ανάγκη.

Έχει γίνει χρήση της δυνατότητας παραγωγής τεκμηρίωσης του πηγαίου κώδικα με την
αξιοποίηση των δυνατοτήτων του pydoc και του doxygen. Οπότε, κάποιες λεπτομέρειες της
λειτουργίας του συστήματος είναι διαθέσιμες και στον πηγαίο κώδικα.  Στη συνέχεια,
περιγράφονται κάποιες γενικές έννοιες της χρήσης και των λειτουργιών του, και σχόλια
που είναι χρήσιμα για τη γενικότερη κατανόηση του συστήματος.


##### Πρόγραμμα `sun_tracker_main.py`

Πρόκειται για το κύριο πρόγραμμα ελέγχου του ηλιοστάτη. Είναι υπεύθυνο για τη
λειτουργία του και πρέπει να εκτελείται, ώστε τα όργανα να ακολουθούν τον ήλιο.
Επιγραμματικά οι λειτουργίες του περιλαμβάνουν:
(α) τη δημιουργία, τον έλεγχο και την επανασύνδεση της σειριακής επικοινωνίας με τον
ηλιοστάτη,
(β) την αναμονή της ανατολής του ήλιου για την έναρξη κίνησης και τη στάθμευση του
οργάνου μετά τη δύση του ηλίου, ώστε να υπάρχει συνεκτικότητα στο σήμα σκότους,
(γ) την παρακολούθηση της κίνησης του ήλιου,
(δ) την πλήρη καταγραφή της λειτουργίας και των εντολών κινήσεων (logging),
(ε) την εκπομπή τηλεμετρίας της λειτουργίας του ηλιοστάτη μέσω διαδικτύου με το
πρωτόκολλο zmq και
(στ) την εισαγωγή διορθωτικών παραμέτρων διόπτευσης.

Επίσης, εξαρτάται και από κάποια υποπρογράμματα που μπορούν να καθορίσουν κάποιες από
τις συνθήκες λειτουργίας του όπως:
(α) τον αλγόριθμό της θέσης του ήλιου που εφαρμόζεται (π.χ. `sun_vector_astropy.py`, `sun_vector_ephem.py` κ.α.),
(β) τις παραμέτρους της τοποθεσίας (`param_location.py`) και
(γ) τις εντολές της σειριακής επικοινωνίας του ηλιοστάτη (`tracker_functions.py`).
Το λογικό διάγραμμα ροής παρουσιάζεται στο
Σχήμα\nobreakspace{}\@ref(fig:sun-tracker-flow).


##### Προγράμματα `sun_vector_astropy.py`, `sun_vector_ephem.py` κ.α

Βοηθητικά προγράμματα που το καθένα περιέχει από μία μέθοδο υπολογισμού της θέσης του
ήλιου.  Ο σκοπός τους είναι να προετοιμάζουν τις κατάλληλες βιβλιοθήκες και να
παρουσιάζουν την ίδια λειτουργία ως προς τη χρήση και τα αποτελέσματα. Έτσι, μπορούν
να χρησιμοποιηθούν στο `sun_tracker_main.py`.  Υπάρχουν διαθέσιμα και άλλα
υποπρογράμματα με αυτή τη λειτουργία που αξιοποιούν διάφορες άλλες βιβλιοθήκες ή
εκτελέσιμα (binary), τα οποία δεν απαριθμούνται εδώ.
<!-- * Για λειτουργικό σύστημα windows το astropy δε λειτουργεί κανονικά. -->
<!-- * Το ephem δε λειτουργεί καλά κοντά στον ορίζοντα. -->
<!-- * Υπάρχουν έτοιμα και κάποια binary γραμμένα σε C, Fortan και Basic που μπορούν
να ενσωματωθούν σε κάποιο wrapper.  -->


##### Πρόγραμμα `param_location.py`

Περιέχει τις παραμέτρους της τοποθεσίας, το γεωγραφικό πλάτος, το μήκος, το υψόμετρο
και τα όρια του τοπικού ορίζοντα. Επίσης, περιέχει τη γενική κλιματολογία της
τοποθεσίας.  Η συγκεκριμένη, χρησιμοποιείται σε ορισμένες μεθόδους υπολογισμού της
θέσης του ήλιου για τον υπολογισμό της γεωμετρικής διάθλασης.


##### Πρόγραμμα `tracker_functions.py`

Περιέχει κάποιες βοηθητικές μεθόδους για το κύριο πρόγραμμα, καθώς και κάποιες
μεθόδους και παραμέτρους για τη λειτουργία και επικοινωνία του ηλιοστάτη. Δίνει τη
δυνατότητα αποθήκευσης, αλλαγής και φόρτωσης των ρυθμίσεων του ηλιοστάτη. Επιπλέον,
θέτει τα όρια και εκτελεί ελέγχους των τιμών των παραμέτρων του. Έτσι, ο ηλιοστάτης
προστατεύεται από τυχόν λειτουργία του εκτός ορίων.


##### Πρόγραμμα `tracker_sighting_no_ui_tcp-port.py` {#sightingprogram}

Αυτό το πρόγραμμα χρησιμοποιείται κατά τη διόπτευση του ηλιοστάτη.  Μπορεί να
τροποποιήσει τις γωνίες μηδενισμού των γωνιών του αζιμούθιου και του ζενίθ (offset)
σε πραγματικό χρόνο.  Εκτελείται σε τερματικό και στέλνει τις τιμές στο
`sun_tracker_main.py`. Οι αλλαγές που προκύπτουν, επιδρούν άμεσα στη διόπτευση του
ηλιοστάτη.  Μπορεί να μηδενίσει ή να διαβάσει τις αποθηκευμένες τιμές. Αν οι αλλαγές
δεν αποθηκευτούν, την επόμενη φορά που θα τρέξει το κύριο πρόγραμμα, θα διαβάσει τις
προηγούμενες τιμές από τον δίσκο. Οι αλλαγές παρόλα αυτά, θα γραφτούν στο αρχείο
καταγραφής (log) κατά την κανονική έξοδο του κύριου προγράμματος. Το βήμα αλλαγής της
τιμής των διορθώσεων καθορίζεται στον κωδικά του προγράμματος και μπορεί να είναι
οποιαδήποτε δεκαδική τιμή γωνίας αζιμούθιου ή ζενίθ.

<!-- echo=F, include=F, eval=BUILD_IMG -->
<!-- fig.ext = 'png', to get png and resolution -->
<!--
```{tikz sun-tracker-main, echo=F, include=F, eval=BUILD_IMG}

\usetikzlibrary{shapes,arrows}
\usetikzlibrary{shapes.geometric,arrows,positioning}

\tikzstyle{startstop} = [rectangle, rounded corners, minimum width=3cm, minimum height=.5cm,text centered, draw=black, fill=red!30]
\tikzstyle{arrow} = [thick,->,>=stealth]

% Define block styles
\tikzstyle{decision} = [diamond, draw, fill=blue!20, text width=6.5em, text badly centered, node distance=3.5cm, inner sep=0pt]
\tikzstyle{io} = [trapezium, trapezium left angle=70, trapezium right angle=110, minimum width=1cm, minimum height=1cm, text centered, draw=black, fill=blue!30]
\tikzstyle{process} = [rectangle, minimum width=3cm, minimum height=1cm, text centered, text width=3cm, draw=black, fill=orange!30]
% \tikzstyle{decision} = [diamond, minimum width=3cm, minimum height=1cm, text centered, draw=black, fill=green!30]

\tikzstyle{block}  = [rectangle, draw, fill=blue!20, text width=5em, text centered, rounded corners, minimum height=4em]
% \tikzstyle{line} = [draw, -latex]
\tikzstyle{cloud}  = [draw, ellipse,fill=green!20,text centered ,node distance=3cm, minimum height=3em,text width=2.5cm]

% Draw background
\newcommand{\background}[5]{%
  \begin{pgfonlayer}{background}
    % Left-top corner of the background rectangle
    \path (#1.west |- #2.north)+(-0.5,0.5) node (a1) {};
    % Right-bottom corner of the background rectangle
    \path (#3.east |- #4.south)+(+0.5,-0.25) node (a2) {};
    % Draw the background
    \path[fill=yellow!20,rounded corners, draw=black!50, dashed]
      (a1) rectangle (a2);
    \path (a1.east |- a1.south)+(0.8,-0.3) node (u1)
      {\scriptsize\textit{Unidad #5}};
  \end{pgfonlayer}}

\pgfdeclarelayer{background}
\pgfdeclarelayer{foreground}
\pgfsetlayers{background,main,foreground}

\begin{tikzpicture}[node distance=2cm]

\node (start)    [startstop]                                    {Start};

\node (p_initld) [process, minimum width=4cm, text width=4cm, below of=start, yshift=0cm]         {Initialize:\\modules, logging,\\sun vector algorithm,\\location parameters,\\tracker control functions};
        \draw [arrow] (start) -- (p_initld);

\node (d_startt) [decision, below of=p_initld, yshift=0cm]      {Sun near horizon};
        \draw [arrow] (p_initld) -- (d_startt);

\node (p_iofils) [process,  below of=d_startt, yshift=-.5cm]    {Start i/o ports};
        \draw [arrow] (d_startt) -- node[anchor=east] {True} (p_iofils);

\node (d_serres) [decision, below of=p_iofils, yshift=.5cm]     {Serial connection};
        \draw [arrow] (p_iofils) -- (d_serres) coordinate[midway] (mid3);

\node (p_sercnt) [process,  right of=d_serres, xshift=2.5cm]    {Reconnection routine};
        \draw [arrow] (d_serres) -- node[anchor=south] {False} (p_sercnt);
        \draw [arrow] (p_sercnt) |- (mid3);

\node (d_trcres) [decision, below of=d_serres]                  {Tracker communicate};
        \draw [arrow] (d_serres) -- node[anchor=east] {True} (d_trcres) coordinate[midway] (mid4);

\node (p_recont) [process,  right of=d_trcres, xshift=2.5cm]    {Reconnection routine};
        \draw [arrow] (d_trcres) -- node[anchor=south] {False} (p_recont);
        \draw [arrow] (p_recont) |- (mid4);

\node (p_sunvec) [process, minimum width=4cm, text width=4cm, below of=d_trcres, yshift=-.5cm]    {Sun vector calculation};
        \draw [arrow] (d_trcres) -- node[anchor=east] {True} (p_sunvec) coordinate[midway] (mid2);

\node (p_trcstp) [process, minimum width=4cm, text width=4cm, below of=p_sunvec, yshift=+.5cm]    {Tracker step calculation};
        \draw [arrow] (p_sunvec) -- (p_trcstp);

\node (d_sunup1) [decision, below of=p_trcstp, yshift=+1cm]     {Sun above horizon?};
        \draw [arrow] (p_trcstp) -- (d_sunup1);
        \draw [arrow] (d_sunup1) -- node[anchor=south,pos=.2]{False} ++(+4,0) |-  (mid2);

\node (d_trcmov) [decision, below of=d_sunup1, yshift=-0cm]     {Need\\to move?};
        \draw [arrow] (d_sunup1) -- node[anchor=east] {True} (d_trcmov);

\node (p_trcskp) [process,  right of=d_trcmov, xshift=2.5cm]    {No action};
        \draw [arrow] (d_trcmov) -- node[anchor=south] {False} (p_trcskp);

\node (o_trccmd) [io,       below of=d_trcmov, yshift=-0.5cm]   {Send move command to tracker};
        \draw [arrow] (d_trcmov) -- node[anchor=east] {True} (o_trccmd);

\node (p_trcend) [decision, below of=o_trccmd, yshift=0.5cm]    {Tracking below horizon \& afternoon?};
        \draw [arrow] (o_trccmd) -- (p_trcend) coordinate[midway] (mid);
        \draw [arrow] (p_trcskp) |- (mid);

\node (p_brcklp) [process,  left of=p_trcend,  xshift=-4.5cm]   {Break loop};
        \draw [arrow] (p_trcend) -- node[anchor=south] {True} (p_brcklp);

\node (p_exptui) [process,  below of=p_trcend, yshift=-1cm ]    {Output for GUI};
        \draw [arrow] (p_trcend) -- node[anchor=east] {False} (p_exptui);

\node (f_uicomm) [cloud ,  left of=p_exptui, xshift=-3cm] {tcp port 7000};
        \draw [arrow,dashed] (p_exptui) -- (f_uicomm);

\node (p_inpsig) [process, minimum width=4cm, text width=4cm, below of=p_exptui, yshift=+.5cm ]   {Input from sighting};
        \draw [arrow] (p_exptui) -- (p_inpsig);

\node (f_sighti) [cloud ,  left of=p_inpsig, xshift=-3cm] {tcp port 7005};
        \draw [arrow,dashed] (f_sighti) -- (p_inpsig);

\node (d_trccon) [decision, below of=p_inpsig, yshift=+.5cm]    {Periodically check connection};
        \draw [arrow] (p_inpsig) -- (d_trccon)  coordinate[midway] (mid5);
        \draw [arrow] (d_trccon) -- node[anchor=south,pos=.2]{True} ++(+6.5,0) |-   (mid2);

\node (p_recnct) [process,  left of=d_trccon,  xshift=-4.5cm ]  {Reconnect routine};
        \draw [arrow] (d_trccon) -- node[anchor=south] {False} (p_recnct);
        \draw [arrow] (p_recnct) |- (mid5);

\node (end)      [startstop, below of=d_trccon, yshift=-1cm]                    {Exit};
        \draw [arrow,dashed] (p_recnct) |- node[anchor=west,pos=.1]{Fail} (end);
        \draw [arrow] (p_brcklp) -- ++(-2,0) |- (end);
        \draw [arrow] (d_startt) -- node[anchor=south,pos=.1]{False} ++(-8.5,0) |- (end);

% right up left down text
% \background{p_sunvec}{o_trccmd}{d_trccon}{p_trcskp}{hellllo}

\begin{pgfonlayer}{background}
    % Left-top corner of the background rectangle
    \path (o_trccmd.west |- p_sunvec.north)+(-1,.5) node (a1) {};
    % Right-bottom corner of the background rectanle
    \path (d_trccon.south -| p_trcskp.east)+(+.8,-0.25) node (a2) {};
    % Draw the background
    \path[fill=yellow!20,rounded corners, draw=black!50, dashed]
        (a1) rectangle (a2);
    \path (a2)+(-1,+0.3) node (u1)
        {\scriptsize\textit{Tracking loop}};
\end{pgfonlayer}

\end{tikzpicture}
```
-->

<!-- 1825x4844 : 100 - 182500/4844 set for whole page -->

```{r sun-tracker-flow, out.height = "97%", out.width = "59.324525%", include=TRUE, echo=FALSE, fig.cap="Λογικό διάγραμμα ροής του προγράμματος ελέγχου του ηλιοστάτη.", fig.pos="H"}
knitr::include_graphics("./figure/sun-tracker-main-1.pdf")
```

### Εγκατάσταση του ηλιοστάτη {#trackerinstallation}

Είναι αναγκαίο το επίπεδο περιστροφής του ηλιοστάτη να είναι απολύτως οριζόντιο, αλλά
και να διατηρείται κατά τη λειτουργία του συστήματος ηλιοστάτη - πυρηλιομέτρου. Γι'
αυτό το λόγο, η βάση πρέπει να είναι αρκετά σταθερή, αλλά και να έχει τη δυνατότητα ρύθμισης
της οριζοντίωσής της.  Ακόμα και τυχόν μικρές αποκλίσεις από το ιδανικό, μπορεί να
προκαλέσουν συστηματικές ασυμμετρίες στις μετρήσεις του πυρηλιομέτρου που είναι
δύσκολο να εντοπιστούν.  Είναι απαραίτητο, μετά την τοποθέτηση του οργάνου, αλλά και
περιοδικά, να ελέγχεται η οριζοντίωση του ηλιοστάτη.  Στη συνέχεια θα περιγράψουμε τα
βήματα ρύθμισης του ηλιοστάτη για την παρακολούθηση της πορείας του ήλιου.

<!-- convert -density 300 compass.pdf -shave 204x0 -quality 100 ccc.pdf -->
<!-- convert -density 300 -quality 100 ccc.pdf compass.png -->


#### Οριζοντίωση του ηλιοστάτη (leveling)

Ένα αλφάδι φυσαλίδας (αεροστάθμη) με δυνατότητα ανεξάρτητης ρύθμισης του επιπέδου του
σε σχέση με το όργανο χρησιμοποιείται για τον έλεγχο της οριζοντίωσης, όπως φαίνεται
στην Εικόνα\nobreakspace{}\@ref(fig:trackerleveling).  Η οριζοντίωση του επίπεδου
περιστροφής του ηλιοστάτη επιτυγχάνεται ακολουθώντας τα παρακάτω βήματα. Σταματάμε
την τροφοδοσία και αποσυνδέουμε τα καλώδια επικοινωνίας του πυρηλιομέτρου και του
ηλιοστάτη, ώστε ο δεύτερος να μπορεί να περιστραφεί ελεύθερα γύρω από τον κατακόρυφο
άξονα.  Στη συνέχεια, ρυθμίζουμε κάθε σημείο ελευθερίας του επιπέδου της βάσης,
(εδώ, κάθε πόδι της βάσης) διαδοχικά, μέχρι το επίπεδο του οργάνου να συμφωνεί με το
επίπεδο αναφοράς της αεροστάθμης.  Σε όλη τη διαδικασία δεν πρέπει να αλλάξουμε τη
θέση της αεροστάθμης πάνω στο όργανο.

```{r trackerleveling, echo=F, fig.scap="Οριζοντίωση του ηλιοστάτη", fig.cap="Οριζοντίωση του ηλιοστάτη. Φαίνεται ο ηλιοστάτης εγκατεστημένος σε ρυθμιζόμενη βάση (τρίποδο) και η αεροστάθμη (αλφάδι) με την οποία ελέγχεται η οριζοντίωση.", out.width = '80%', fig.env='img', fig.pos="h!"}
knitr::include_graphics("/home/athan/Aerosols/Photos/NT/20160307_Tracker_CHP1_CCD/20160307_124618.JPG")
```

Η διαδικασία για κάθε πόδι έχει ως εξής: Με τη φυσαλίδα παράλληλη στον άξονα
περιστροφής του ηλιοστάτη, περιστρέφουμε τη συσκευή ώστε ο άξονας της φυσαλίδας να
έχει την ίδια διεύθυνση με κάποιο από τα πόδια της βάσης.  Φέρνουμε τη στάθμη της
φυσαλίδας στο οριζόντιο επίπεδο, ρυθμίζοντας το ύψος τόσο της φυσαλίδας όσο και του
ποδιού, προσπαθώντας να μοιράσουμε τη μεταβολή ισόποσα μεταξύ των δύο.  Ο ηλιοστάτης
περιστρέφεται κατά $180^\circ$, ώστε να αντιστραφεί η φορά της φυσαλίδας αλλά
ταυτόχρονα να παραμείνει πάνω στον ίδιο άξονα, και επαναλαμβάνουμε τη ρύθμιση όπως
προηγουμένως.

Το παραπάνω βήμα επαναλαμβάνεται μέχρι να οριζοντιωθεί το επίπεδο της φυσαλίδας και
στις δύο κατευθύνσεις. Με τον ίδιο τρόπο ρυθμίζουμε διαδοχικά και τα υπόλοιπα πόδια.
Πιθανότατα, θα χρειαστεί παραπάνω από ένας κύκλος ρυθμίσεων τόσο για το κάθε πόδι,
όσο και για τα τρία σε αλληλουχία. Το πλήθος των βημάτων, εξαρτάται από την
ευαισθησία του μηχανισμού ρύθμισης, την ικανότητα του χειριστή αλλά και το επιθυμητό
επίπεδο ακρίβειας. Όταν κατά την πλήρη περιστροφή του οργάνου η φυσαλίδα παραμένει
οριζόντια, ο ηλιοστάτης είναι σωστά οριζοντιωμένος.  Με αυτή τη διαδικασία,
βεβαιωνόμαστε ότι το επίπεδο αναφοράς ορίζεται από τον περιστρεφόμενο κάθετο άξονα
και όχι από το κάλυμμα του οργάνου.


#### Ρύθμιση του αζιμούθιου άξονα

Ένα από τα πρώτα βήματα είναι η ευθυγράμμιση του μηδενός του αζιμούθιου της συσκευής
με τον Βορρά, κατά την αρχική εγκατάσταση του ηλιοστάτη.  Αυτό μπορεί να γίνει με
άμεση ευθυγράμμιση, εφόσον η θέση του Βορρά προσδιοριστεί με σχετικά καλή ακρίβεια
(Εικόνα\nobreakspace{}\ref{fig:trackercompass}). Εναλλακτικά, μπορεί να γίνει όταν ο
ηλιοστάτης είναι σε λειτουργία και ακολουθεί τον ήλιο. Τότε, η διόπτευση του ήλιου
μπορεί να χρησιμοποιηθεί για να ευθυγραμμιστεί το αζιμούθιο. Και στις δύο περιπτώσεις
η συσκευή πρέπει να τοποθετηθεί στη βάση της, ώστε να μπορεί να περιστραφεί γύρω από
τον κάθετο άξονα, πριν σταθεροποιηθεί στην τελική της θέση.  Περαιτέρω, βελτίωση της
θέσης του μηδενός του αζιμουθιακού άξονα, γίνεται θέτοντας την κατάλληλη διόρθωση του
μηδενός στο πρόγραμμα ελέγχου μέσω της διαδικασίας διόπτευσης
(Παράγραφος\nobreakspace{}\ref{sighting}).

```{r trackercompass, echo=F, fig.cap="Δορυφορική φωτογραφία της τοποθεσίας μετρήσεων (κόκκινο). Έχουν σχεδιαστεί οι κατευθύνσεις που αντιστοιχούν στα σημεία του ορίζοντα (μπλε), το αζιμούθιο του ήλιου κατά την ανατολή και τη δύση στις 21 Ιουλίου (κίτρινο) και αντίστοιχα στις 21 Δεκεμβρίου (πράσινο). Όλες οι γωνίες είναι μετρημένες με αρχή την κατεύθυνση του Βορρά, το κόκκινο κέντρο δε συμπίπτει οπτικά με την τοποθεσία της μέτρησης λόγω παράλλαξης από το ύψος του κτηρίου. (πηγή υποβάθρου: Google)", out.width = '70%', fig.env='img', fig.pos="h!"}
knitr::include_graphics("images/Compass_el.pdf")
```


#### Ρύθμιση ζενίθιου άξονα.

Η ρύθμιση του ζενίθιου άξονα γίνεται με τον ορισμό της θέσης του μηδενός με την
κατάλληλη τιμή αντιστάθμισης στο πρόγραμμα ελέγχου.  Μπορούμε να χρησιμοποιήσουμε τη
διαδικασία διόπτευσης με το CHP-1 (Παράγραφος\nobreakspace{}\ref{sighting}) για να
βρούμε τον παράγοντα αντιστάθμισης.  Με αυτό τον τρόπο καθορίζουμε την τιμή
αντιστάθμισης διαδραστικά μέχρι το πυρηλιόμετρο να ευθυγραμμιστεί σωστά.


#### Διόπτευση (sighting) με το CHP-1 {#sighting}

Η διαδικασία της διόπτευσης, επιτυγχάνεται μόνο αφού έχει διασφαλιστεί η
οριζοντίωση του ηλιοστάτη. Χρησιμοποιούμε το σύστημα διόπτευσης που έχει το σώμα του
πυρηλιομέτρου CHP-1, το οποίο έχει ένα άνοιγμα προς την πλευρά του ήλιου και έναν
στόχο από την αντίθετη πλευρά, ώστε να προβάλλεται ο ηλιακός δίσκος πάνω στον στόχο
(Εικόνα\nobreakspace{}\ref{img:chp1target}).

\begin{img}[h!]
  \centering
  \captionsetup[subimg]{justification=centering}
  \subfloat[ ]{
    \includegraphics[width=.40\textwidth]{./figure/20160810_125211_cr.jpg}
  }
  \subfloat[ ]{
    \includegraphics[width=.40\textwidth]{./figure/20170828_170546_cr.jpg}
  }
  \caption{
  Διαγνωστικές φωτογραφίες της στόχευσης του πυρηλιομέτρου CHP-1 όπου (\textbf{α᾽}) ο
  στόχος (μαύρη κουκίδα) βρίσκεται στο κέντρο του ηλιακού δίσκου και (\textbf{β᾽}) με κακή
  στόχευση όπου πρέπει να γίνει διόρθωση της διόπτευσης του ηλιοστάτη.}
  \label{img:chp1target}
\end{img}

Με βάση το προηγούμενο ελέγχουμε αν ο ηλιοστάτης είναι σωστά προσανατολισμένος. Η
διόπτευση ρυθμίζεται, μέσω ενός βοηθητικού προγράμματος
(Παράγραφος\nobreakspace{}\ref{sightingprogram}), που επικοινωνεί με αυτό της
κανονικής λειτουργίας και μπορεί να επιβάλει διορθώσεις στη θέση των αξόνων.  Αυτό
έχει ως αποτέλεσμα, την άμεση μεταβολή της γωνίας κάθε άξονα, χρησιμοποιώντας το
πληκτρολόγιο του υπολογιστή. Η μεταβολή της γωνίας του άξονα του ηλιοστάτη σε κάθε
πάτημα του πλήκτρου γίνεται κατά ένα κλάσμα της γωνίας του βήματος του κινητήρα.
Αυτή η επιλογή έχει γίνει, ώστε ο χειριστής να μπορεί εύκολα να διορθώσει όχι μόνο τη
θέση αλλά και τον χρόνο κατά τον οποίο θα πρέπει να εκτελεί ένα βήμα ο κινητήρας.

Με τις παρούσες δυνατότητες του ηλιοστάτη και του προσαρτημένου οργάνου (CHP-1), η
σωστή διόπτευση μπορεί να επιβεβαιωθεί μόνο με επιτόπια επιθεώρηση. Είναι επομένως
αναγκαίο, να γίνεται τακτική επαλήθευση της διόπτευσης. Για το λόγο αυτό, διατηρούμε
ένα ημερολόγιο, όπου καταγράφονται οι έλεγχοι της διόπτευσης του οργάνου, οι
διορθώσεις που γίνονται, όταν είναι αναγκαίο, και άλλα συμβάντα σχετικά με τη
λειτουργία του.


### Ειδικές λεπτομέρειες της λειτουργίας του ηλιοστάτη

Είναι απαραίτητο να δοθεί προσοχή, κατά τη λειτουργία του ηλιοστάτη, διότι δεν
υπάρχει μηχανικός ή ηλεκτρονικός περιορισμός, που να αποτρέπει την περιστροφή των
αξόνων κατά γωνίες μεγαλύτερες του πλήρη κύκλου. Αυτό μπορεί να προκαλέσει πρόβλημα,
γιατί το καλώδιο του ηλιοστάτη αλλά και του οργάνου μπορεί να τυλιχθεί γύρω από τον
άξονα και να καταστραφούν.  Επίσης, σε περίπτωση που η συσκευή δεν είναι σταθερά
τοποθετημένη, όπως για παράδειγμα σε τρίποδα, η περιστροφή μπορεί να τραβήξει τα
καλώδια και να εκτρέψει τη διάταξη από τη θέση οριζοντίωσης.

Ο ηλιοστάτης, όταν του δοθεί η εντολή μηδενισμού (`DA`, `DZ`), θα προσπαθήσει να
μηδενίσει τον μετρητή βήματος του κάθε άξονα, αφού τον μετακινήσει σε μία γνωστή
θέση.  Αυτό γίνεται με την περιστροφή του άξονα, μέχρι να φτάσει στην προκαθορισμένη
θέση, την οποία αναγνωρίζει με μία φωτοδίοδο.  Σε περίπτωση που δεν υπάρξει σήμα από
τη φωτοδίοδο, θα συνεχίσει να περιστρέφεται. Αυτό μπορεί να συμβεί, αν το περίβλημα
της συσκευής είναι ανοιχτό σε έντονο φως ή αν υπάρχει κάποιο πρόβλημα επικοινωνίας με
τη φωτοδίοδο.

Ο ηλιοστάτης μηδενίζει τον κάθε άξονα στη θέση βήματος $5000$. Από εκεί και πέρα
μπορεί να κινηθεί και προς τις δύο κατευθύνσεις, αυξάνοντας ή μειώνοντας το μετρητή
βημάτων αντίστοιχα.  Αν το βήμα του μετρητή γίνει αρνητικό από κάποια εντολή ή αν
γίνει μεγαλύτερο του $9999$, ο ηλιοστάτης θα κολλήσει και θα συνεχίσει να
περιστρέφεται ασταμάτητα.  Αυτό πρέπει να αποφευχθεί μέσω του προγραμματισμού του.
Εναλλακτικά, θα μπορούσε να προστεθεί κάποιος μηχανικός ή ηλεκτρονικός μηχανισμός
περιορισμού.  Εάν το βήμα γίνει ακατάλληλο και ο ηλιοστάτης περιστρέφεται ασταμάτητα,
μπορεί να σταματήσει με την εντολή `stop`.

Όταν ο ηλιοστάτης τροφοδοτείται κανονικά, οι κινητήρες είναι ενεργοποιημένοι και δε
θα επιτρέψουν την ελεύθερη περιστροφή των αξόνων.  Σε περίπτωση που οι άξονες
περιστραφούν από εξωτερική παρέμβαση, πρέπει να διακοπεί η λειτουργία, να γίνει
μηδενισμός των αξόνων (`DA`, `DZ`) και να ελεγχθεί η διόπτευση (sighting) του
οργάνου.  Η αιτία αυτού είναι ότι ο ηλιοστάτης δεν έχει τρόπο να
γνωρίζει σε ποιο βήμα βρίσκεται ο κινητήρας στην περίπτωση που αποσυγχρονιστεί το
βήμα που μετράει ο μικροελεγκτής από το πραγματικό.

Το τροφοδοτικό ισχύος του ηλιοστάτη παρέχει συνεχή διαφορά δυναμικού
$19-20\,\text{V}$. Δε γνωρίζουμε τη μέγιστη κατανάλωση ισχύος της συσκευής ούτε και
το μέγιστο ηλεκτρικό ρεύμα. Στην εσωτερική ηλεκτρονική πλακέτα, υπό κανονική
λειτουργία, αναμένουμε περίπου $18\,\text{V}$ μετά από την πτώση τάσης στο καλώδιο
τροφοδοσίας.

Για το πρώτο/παλιό μοντέλο του ηλιοστάτη (ορθογώνιο παραλληλόγραμμο καπάκι) η
αντίσταση των κινητήρων σε εξωτερική περιστροφή είναι πολύ μικρή, με αποτέλεσμα να
είναι εύκολη η τυχαία μετατόπισή του από εξωτερικούς παράγοντες.

Με τη σύνδεση USB-to-serial, σε GNU/Linux, η συσκευή φαίνεται ως `/dev/ttyUSB#`.
Καθώς πρόκειται για συσκευή του συστήματος, ο χρήστης συνήθως χρειάζεται να έχει τα
κατάλληλα δικαιώματα στο σύστημα για να μπορεί να τη χρησιμοποιήσει. Αυτό μπορεί να
γίνει με τις ακόλουθες εντολές:

```{bash eval=F, echo=T}
## Add current user to dialout group (needs reboot)
sudo usermod -a -G dialout $USER
## Allow anyone to use the device (less secure, not permanent)
sudo chmod 666 /dev/ttyUSB0
```

<!--
### Resetting USB/serial interface σε GNU/Linux.

Κάποιες ιδέες και προτάσεις για το πως μπορεί να γίνει επανασύνδεση της επικοινωνίας χωρίς να αποσυνδεθεί η φυσική σύνδεση. Έχουν παραχθεί και τα αντίστοιχα 'bash script' που μπορούν να βρουν την κατάλληλη USB συσκευή και να εκτελέσουν τις παρακάτω ενέργειες.

### Αποσύνδεση των αντίστοιχων module/firmware από τον kernel.

Αυτές οι εντολές απενεργοποιούν και ενεργοποιούν τα κομμάτια του συστήματος που χειρίζονται τις σειριακές συσκευές και τις συσκευές USB.

```{bash eval=F}
rmmod  ftdi_sio
rmmod  usbserial
modprobe ftdi_sio
modprobe usbserial
```

### Αποσύνδεση της συσκευής από το σύστημα.

Οι παρακάτω εντολές στέλνουν ένα σήμα σύνδεσης και αποσύνδεσης στη συσκευή USB.

```{bash eval=F}
sudo sh -c "echo 0 > /sys/bus/usb/devices/1-1/authorized"
sudo sh -c "echo 1 > /sys/bus/usb/devices/1-1/authorized"
```

### Αποσύνδεση του mountpoint από το σύστημα (untested).

Αν και δεν έχουν δοκιμαστεί, οι εντολές αυτής της μορφής μπορούν να αποσυνδέσουν και
να επανασυνδέσουν τη διαδρομή αρχείου που αντιστοιχεί στη συσκευή και επομένως να
ανανεώσουν την επικοινωνία.

```{bash eval=F}
unbind /dev/ttyUSB0
bind   /dev/ttyUSB0
```
-->


## Περιληπτικές οδηγίες μετρήσεων με το CHP-1 στον ᾽radmon᾽ (quick startup) {#quickstrartup}

### Σύνδεση του ηλιοστάτη {-}

Στο τροφοδοτικό του ηλιοστάτη συνδέονται τρία καλώδια.  Συνήθως, η σύνδεση
επιτυγχάνεται αν τα καλώδια συνδεθούν με τη σειρά από δεξιά προς τα αριστερά ή το
αντίθετο.  Η εκτέλεση του προγράμματος θα δείξει αν η επικοινωνία έχει γίνει σωστά.

### Μηδενισμός του ηλιοστάτη {-}

Η επανασύνδεση αποτρέπεται, αν όταν ο ηλιοστάτης τροφοδοτείται, τα ηλεκτρονικά του
είναι ενεργά.  Προκειμένου να λυθεί αυτό, πρέπει ή ο ηλιοστάτης να μείνει για μερικά
λεπτά χωρίς τροφοδοσία, ή να βραχυκυκλωθούν οι επαφές που τροφοδοτούν την ηλεκτρονική
πλακέτα του ηλιοστάτη.  Αν το περίβλημα του ηλιοστάτη είναι ανοικτό, οι επαφές είναι
προσβάσιμες. Εναλλακτικά, μπορούν να βραχυκυκλωθούν οι επαφές του καλωδίου με κάποιο
μεταλλικό αντικείμενο από τη μεριά του καλωδίου που συνδέεται στο τροφοδοτικό.

### Εκκίνηση του προγράμματος ελέγχου {-}

Το πρόγραμμα ελέγχου του ηλιοστάτη (**sun_tracker_main.py**) μπορεί να ξεκινήσει:

* Χειροκίνητα (link στην επιφάνεια εργασίας)
* Μέσω του 'Scheduled Tasks' (properties -\> run)
* Εκτέλεση από το τερματικό (cmd.exe): `c:\><python path>\python.exe <script path>\sun_tracker_main.py`


### Διόπτευση του ήλιου (sighting) {-}

Η διόπτευση του Ήλιου μπορεί να γίνει με το πρόγραμμα
**tracker_sighting_no_ui_tcp-port.py**.  Το πρόγραμμα εμφανίζει τις δυνατές επιλογές
στην οθόνη και περιμένει είσοδο από το πληκτρολόγιο.  Οι ρυθμίσεις επιδρούν άμεσα στη
θέση του ηλιοστάτη (το πρόγραμμα **sun_tracker_main.py** πρέπει να εκτελείται και ο
ηλιοστάτης πρέπει να έχει αρχίσει την κανονική λειτουργία).  Ανάδραση των ρυθμίσεων
μπορούμε να έχουμε παρακολουθώντας το τερματικό που εκτελείται το
**sun_tracker_main.py**.  **Οι ρυθμίσεις πρέπει να σωθούν (`'s'`) για να αποθηκευτούν
στον δίσκο και να διατηρηθούν στην επόμενη εκτέλεση (ημέρα)**.

Στο σημείο αυτό αξίζει να σημειωθεί ότι είναι βολικό το sighting να γίνεται με κάποιο
smartphone μέσω απομακρυσμένης επιφάνειας εργασίας (remote desktop, 'rdp').  Έτσι,
υπάρχει άμεση επίβλεψη της κίνησης του ηλιοστάτη και των διορθώσεων και διευκολύνεται
ο συγχρονισμός της κίνησης του ηλιοστάτη με τη θέση του ήλιου.

### Σύνδεση πολυμέτρου 'Protek 506' {-}

Το πολύμετρο μετράει την αντίσταση του pt100 ή του θερμίστορ (χρωματισμός καλωδίων
στο εγχειρίδιο του CHP-1) και η μέτρηση διαβάζεται μέσω πρωτοκόλλου 'RS-232'.  Στο
πολύμετρο πρέπει να είναι ενεργές οι επιλογές '*KEEP ON*' και '*RS232*'. Αυτό γίνεται
με τα πλήκτρα 'menu' και 'enter' για κάθε μία από τις ρυθμίσεις.


### Εκκίνηση προγράμματος πολυμέτρου {-}

Το πρόγραμμα (**protek506_measurments.py**) παίρνει μετρήσεις της αντίστασης -
θερμοκρασίας του CHP-1 και εκτελείται με όμοιο τρόπο με το πρόγραμμα του ηλιοστάτη.
Καθώς το πρόγραμμα παίρνει μετρήσεις, στην οθόνη του πολυμέτρου πρέπει να
αναβοσβήνουν εναλλάξ οι ενδείξεις '*RX*' και '*TX*'.  Αν αυτό δε συμβεί η επικοινωνία
έχει κολλήσει και το πολύμετρο πρέπει να ξαναρυθμιστεί, όπως παραπάνω.

### Σε περίπτωση διακοπής ρεύματος. {-}

Έχει παρατηρηθεί ότι ο ηλιοστάτης ξεκινά κανονικά, όταν επανέλθει η τροφοδοσία και
ξεκινήσει ο υπολογιστής. Όποτε αυτό δεν επιτυγχάνεται, χρειάζεται χειροκίνητη
παρέμβαση.

### Προγραμματισμένη εκκίνηση προγραμμάτων scheduled tasks' {-}

Τα παρακάτω προγράμματα εκτελούνται συνεχώς από το 'Task Scheduler' του λειτουργικού
συστήματος και σχετίζονται με την καθημερινή λειτουργία του ηλιοστάτη και του CPH-1,
και είναι τα εξής:

- **sun_tracker_main.py**       (απαραίτητο, ελέγχει την κίνηση του ηλιοστάτη)
- **protek506_measurments.py**  (σημαντικό, μετράει τη θερμοκρασία του CPH-1)
- **data_pub_win.py**           (βοηθητικό, εκπέμπει δεδομένα λειτουργίας του ηλιοστάτη)

Σε περίπτωση που κάποιο από αυτά ήδη εκτελείται δε θα ξανατρέξει,
διότι υπάρχει εσωτερικός έλεγχος στον κώδικα του κάθε προγράμματος.

Επιπλέον, πρέπει να είναι ενεργή η επιλογή: `"Disable error reporting"`, ώστε να μην
κολλάει ο ηλιοστάτης, περιμένοντας τον διάλογο του "Error reporting", όταν υπάρχει
κάποιο τυχαίο πρόβλημα. Πιθανόν, και η επιλογή `"But notify me when critical error
occurs"` πρέπει να είναι ενεργοποιημένη. Για *Windows XP: Control Panel > System >
Advanced > Error reporting*.

